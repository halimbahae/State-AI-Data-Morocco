---
import Logo from "../../assets/mds.svg?raw";
---

<section
  class="h-screen w-full flex items-center justify-start font-poppins bg-gradient-to-b"
>
  <!-- Main Container -->
  <div class="flex justify-evenly flex-wrap w-full h-full">
    <div class="text-white px-8 py-12 rounded-lg max-w-4xl w-1/2 min-w-[300px] h-full flex flex-col justify-center">

      <h1 class="text-6xl font-bold mb-10">Welcome to</h1>
      <p class="text-5xl mb-10 text-secondary w-full">
        <span class="box"></span>
        <span class="hi">The State of</span>
        <span class="text"></span>
        <span class="cursor">_</span>
      </p>
  
      <div class="flex flex-col justify-between mb-10 gap-5">
        <input
          type="email"
          placeholder="Enter your email to stay updated"
          class="py-3 px-5 rounded-md bg-transparent border border-white text-white w-8/12 focus:outline-none focus:ring-2 focus:ring-secondary"
        />
        <button
          class="bg-white border text-black border-white py-3 px-8 rounded-md hover:bg-background hover:text-white hover:border-secondary transition duration-300 w-40"
        >
          Submit
        </button>
      </div>
    </div>
  
    <div class="bg-white h-1/4 min-w-[300px] flex justify-start items-start">

      <img src="imageLogo.png" alt="">
    </div>
  </div>
  

  <div class="fixed-marquee bg-transparent">
    <div class="marquee mt-12">
      <div class="marquee-content">
        <span class="text-text"
          >Don't miss out on the latest news. We'll remind you when we launch
          something new!</span
        >
        <span class="text-text ml-24"
          >Don't miss out on the latest news. We'll remind you when we launch
          something new!</span
        >
        <span class="text-text ml-24"
          >Don't miss out on the latest news. We'll remind you when we launch
          something new!</span
        >
      </div>
    </div>
  </div>
</section>

<style>
  .marquee {
    overflow: hidden;
    white-space: nowrap;
    box-sizing: border-box;
    width: 100%;
  }

  .marquee-content {
    display: inline-block;
    animation: marquee 15s linear infinite;
  }

  @keyframes marquee {
    0% {
      transform: translateX(0);
    }
    100% {
      transform: translateX(-50%);
    }
  }
  .fixed-marquee {
    position: fixed;
    bottom: 0;
    left: 0;
    width: 100%;
    z-index: 9999;
  }

  .marquee-content {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 1rem;
    color: white;
  }

  .marquee {
    overflow: hidden;
  }

  .marquee-content span {
    display: inline-block;
    padding-right: 2rem; /* space between the messages */
  }
</style>
<script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.9.1/gsap.min.js"
></script>
<script
  src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.9.1/TextPlugin.min.js"
></script>

<script>
  import { gsap } from "gsap";
  import { TextPlugin } from "gsap/TextPlugin";

  gsap.registerPlugin(TextPlugin);

  window.addEventListener("scroll", () => {
    var marquee = document.querySelector(".fixed-marquee");

    if (window.scrollY > 50) {
      // Instantly hide the marquee without any transition
      gsap.set(marquee, { opacity: 0 });
    } else {
      // Instantly show the marquee without any transition
      gsap.set(marquee, { opacity: 1 });
    }
  });

  const words = [" AI...", " Data..."];

  let cursor = gsap.to(".cursor", {
    opacity: 0,
    ease: "power2.inOut",
    repeat: -1,
  });

  let masterTl = gsap.timeline({ repeat: -1 }).pause();

  let boxTl = gsap.timeline();

  boxTl
    .to(".box", {
      duration: 1,
      width: "17vw",
      delay: 0.5,
      ease: "power4.inOut",
    })
    .from(".hi", { duration: 1, y: "7vw", ease: "power3.out" })
    .to(".box", {
      duration: 1,
      height: "7vw",
      ease: "elastic.out",
      onComplete: function () {
        masterTl.play(); // Directly play the master timeline here
      },
    })
    .to(".box", {
      duration: 2,
      autoAlpha: 0.7,
      yoyo: true,
      repeat: -1,
      ease: "rough({ template: none.out, strength: 1, points: 20, taper: 'none', randomize: true, clamp: false})",
    });

  words.forEach((word) => {
    let tl = gsap.timeline({ repeat: 1, yoyo: true, repeatDelay: 1 });
    tl.to(".text", { duration: 1, text: word });
    masterTl.add(tl);
  });

  masterTl.play(); // Start the animation when ready
</script>
